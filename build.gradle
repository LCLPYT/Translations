plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'gradle-build-utils' version '1.5.3'
}

Properties props = buildUtils.loadProperties('publish.properties')

group = project.maven_group
version = buildUtils.gitVersion()
archivesBaseName = project.archives_base_name

repositories {
    mavenCentral()

    maven {
        url = 'https://repo.lclpnet.work/repository/internal'
    }
}

sourceSets {
    network {
        compileClasspath += main.output
        runtimeClasspath += main.output
    }

    test {
        compileClasspath += network.output + network.compileClasspath
        runtimeClasspath += network.output + network.runtimeClasspath
    }
}

java {
    withSourcesJar()

    registerFeature('network') {
        usingSourceSet(sourceSets.network)
    }
}

dependencies {
    implementation 'com.google.code.findbugs:jsr305:3.0.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.slf4j:slf4j-api:2.0.6'
    networkApi 'work.lclpnet:lclpnetwork-api:1.1.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

configurations {
    networkImplementation {
        extendsFrom implementation
    }
}

test {
    useJUnitPlatform()
}

// tweak jar tasks
[jar, sourcesJar, networkJar].each {
    // include license file
    it.from('LICENSE') {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name

            from components.java

            pom {
                name = 'translations4j'
                description = 'Library to manage I18n with Java applications.'
            }
        }
    }

    buildUtils.setupPublishRepository(repositories, props)
}